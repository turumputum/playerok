#editTrackModal.modal.modal-xl.modal-fullscreen-xl-down.fade(tabindex='-1' aria-labelledby='editTrackModalLabel' aria-hidden='true' data-bs-backdrop="static")
        .modal-dialog.modal-xl.modal-fullscreen-xl-down
            .modal-content
                .modal-header(style='background-color: rgb(177, 220, 226);')
                    h4.editTrackModalTitle Edit track in playlist:
                .modal-body
                    .input-group
                        span.input-group-text.fs-5.fw-bold Track name:
                        input#track_name_input.fs-5.fw-bold.form-control(type="text" style='color: rgb(106, 143, 148)')
                    //-------------------CARD Main settings-----------------------------
                    card.card.card_shadow.mt-4
                        .bg-secondary.card-img-top
                            .h4.mx-2.mt-2 Main settings
                        .card_body.p-2
                            table#editSipmpleTrack.table.table-hover
                                thead
                                    tr  
                                        th(scope='col' style='width:8%') Order
                                        th(scope='col' style='width:10%') Type
                                        th(scope='col' style='width:25%') File name
                                        th(scope='col' ) Path
                                        th(scope='col' style='width:5%') Repeat
                                tbody
                                    tr
                                        th 
                                            input#order_input.form-control(type='number' placeholder='' aria-label='')
                                        th
                                            select#type_select.form-select
                                        th
                                            select#name_select.form-select
                                        th
                                            input#path_input.form-control(type='text' placeholder='' aria-label='' disabled='' readonly='')
                                        th 
                                            input#bt_repeat.btn-check(type='checkbox' checked='' autocomplete='off')
                                            label.btn.bi.bi-arrow-repeat.btn-outline-secondary.mb-2.mx-1(for='bt_repeat' style="--bs-btn-font-size: 15px; width: 60px;") 



                            card.card.mt-4 
                                .card-img-top(style='background-color: rgb(177, 177, 177);')
                                    .h5.mx-2.mt-2 Actions
                                table.table#table_actions_topics.table-hover
                                    datalist#action_topics_list
                                    thead
                                        tr
                                            th(scope='col' style="width: 15%;") Event
                                            th(scope='col') Topic
                                            th(scope='col' style="width: 15%;") Payload
                                            th(scope='col' style="width: 15%;") Controls

                                    tbody
                    //-------------------CARD Triggers and actions-----------------------------
                    card.card.card_shadow.mt-4
                        .bg-secondary.card-img-top
                            .h4.mx-2.mt-2 Interactive settings
                        .card_body.p-2
                          
                            card.card.h-100.mt-2
                                .card-img-top(style='background-color: rgb(177, 177, 177);')
                                    .h5.mx-2.mt-2 Triggers
                                table.table#table_triggers_topics.table-hover
                                    datalist#trigger_topics_list
                                    thead
                                        tr
                                            th(scope='col' style="width: 15%;") Event
                                            th(scope='col') Topic
                                            th(scope='col' style="width: 15%;") Payload
                                            th(scope='col' style="width: 15%;") Controls

                                    tbody

                            
                .modal-footer
                    button.btn.btn-secondary(onclick = 'saveTrack()') Save
                    button.btn.btn-secondary(onclick = 'cancelEditTrack()') Cancel
        
script.

    function saveTrack() {
        let type
        
        let track={
            order_num : parseInt($('#order_input').val()),
            name : $('#track_name_input').val(),
            path : $('#path_input').val(),
            content_group : $("#type_select option:selected").text(),
            type : '',
            error: "",
            repeat : $("#bt_repeat").prop('checked'),
            triggers:[],
            actions:[]
        }

        update_array_data(triggers_topic_table, 'T')
        track.triggers = triggers_topic_table.data_array
        update_array_data(actions_topic_table, 'A')
        track.actions = actions_topic_table.data_array

        if(track.triggers.length>0){
            track.type = 'interactive'  
        }else{
            track.type = 'simple'
        }

        console.log(track)

        //--------verify order num-----------
        current_playlist.tracks.forEach(item => {
            if(item.order_num== track.order_num){
                item.order_num = parseInt(current_track_index)+1
            }
        });

        if(current_track_index>=current_playlist.tracks.length){
            current_playlist.tracks.push(track) 
        }else{
            current_playlist.tracks[current_track_index]=track
        }

        current_playlist.tracks.sort(function(a,b){
            return a.order_num - b.order_num
        })
        //-----------------simple - interactive sorting
        current_playlist.tracks.sort(function(a,b){
            if(a.type=='simple' && b.type=='interactive'){
                let tmp = b.order_num
                b.order_num=a.order_num
                a.order_num=tmp
                return -1
            }else{
                return 0
            }
        })

        $('#editTrackModal').modal('hide')
        $('#editPlaylistModal').modal('show')
        
    }

    function cancelEditTrack(){
        $('#editTrackModal').modal('hide')
        $('#editPlaylistModal').modal('show')
        
    }

    //--------------end of interactive settings group-------------------
    var triggers_topic_table={
        DOM_table : document.getElementById('table_triggers_topics').getElementsByTagName('tbody')[0],
        data_array : []
    }
    var actions_topic_table={
        DOM_table : document.getElementById('table_actions_topics').getElementsByTagName('tbody')[0],
        data_array : []
    }
    var actionEventList = ["start", "stop"]
    var triggerEventList = ["start", "stop"]

    function show_interactive_card(){

        //console.log(current_playlist.tracks[current_track_index])
    }

    function add_topic(identify){
        let topic = {
            "event":"",
            "topic": "",
            "payload": "",
        }
        if(identify=='A'){
            update_array_data(actions_topic_table,'A')
            actions_topic_table.data_array.push(topic)
            topic_table_show(actions_topic_table, actionEventList, 'action_topics_list', 'A')
        }else if(identify=='T'){
            update_array_data(triggers_topic_table,'T')
            triggers_topic_table.data_array.push(topic)
            topic_table_show(triggers_topic_table, triggerEventList, 'trigger_topics_list', 'T')
        }
    }

    function update_array_data(table, identify){
        for (let row=0; row < (table.DOM_table.rows.length-1); row++) {
            table.data_array[row].event = $(`#${identify}_event_${row}`).val()
            table.data_array[row].topic = $(`#${identify}_topic_${row}`).val()
            table.data_array[row].payload = $(`#${identify}_payload_${row}`).val()
            if(table.data_array[row].event=='' || table.data_array[row].topic=='' || table.data_array[row].payload==''){

            }
        }
    }

    function delete_topic(identify, index){
        if(identify=='A'){
            actions_topic_table.data_array.splice(parseInt(index),1)
            topic_table_show(actions_topic_table, actionEventList, 'action_topics_list', 'A')
        }else if(identify=='T'){
            triggers_topic_table.data_array.splice(parseInt(index),1)
            topic_table_show(triggers_topic_table, triggerEventList, 'trigger_topics_list', 'T')
        }
    }

    function topic_table_show(table, event_array, available_topic_list, identify){

        table.DOM_table.innerHTML = ""
        for (let topic_index in table.data_array) {

            let topic = table.data_array[topic_index]

            let newRow = table.DOM_table.insertRow(table.DOM_table.rows.length)

            newRow.insertCell().innerHTML = `<select id='${identify}_event_${topic_index}' class="form-select"></select>`
            event_array.forEach(event =>{
                $(`#${identify}_event_${topic_index}`).append($('<option>', {value: `${event}`, text : `${event}`}));
            })
            $(`#${identify}_event_${topic_index}`).val(topic.event)

            newRow.insertCell().innerHTML = `<input id='${identify}_topic_${topic_index}' class="form-control" list='${available_topic_list}'></input>`
            $(`#${identify}_topic_${topic_index}`).val(topic.topic)

            newRow.insertCell().innerHTML = `<input id='${identify}_payload_${topic_index}' class="form-control"></input>`
            $(`#${identify}_payload_${topic_index}`).val(topic.payload)

            newRow.insertCell().innerHTML = `<button class="mx-1 mt-1 btn btn-outline-secondary btn-sm" type="button" onclick = "delete_topic('${identify}','${topic_index}')">delete</button>`
        }
        newRow = table.DOM_table.insertRow(table.DOM_table.rows.length)
        newRow.insertCell()
        newRow.insertCell()
        newRow.insertCell()
        newRow.insertCell().innerHTML = `<button class="mx-1 btn btn-outline-secondary btn-sm" type="button" onclick = "add_topic('${identify}')">add</button>`
    }
    //--------------end of interactive settings group-------------------



    //------------------------TRACK MODAL-----------------EVENTS-------------
    //
    editTrackModal.addEventListener('show.bs.modal', function (event) {
        //fetch_getTopicList()
        show_interactive_card()


        $('#type_select').empty()
        for(let key in content_table){
        //console.log(content_table[key].length)
            if(content_table[key].length>0){
                $('#type_select').append(`<option value="">${key}</option>`)
            }   
        }

        //console.log($('#type_select'))
        $('#name_select').empty()
        
        

        if(current_track_index<current_playlist.tracks.length){ 
            console.log("edit exist track")
            //------------------------EDIT SIMPLE SETTINGS-------------------------
            $('#track_name_input').val(current_playlist.tracks[current_track_index].name)
            let track_type = current_playlist.tracks[current_track_index].content_group
            $('#order_input').val(parseInt(current_track_index)+1)
            //let indexType = content_table.findIndex(s=>s.path==current_playlist.tracks[current_track_index].path)
            $('#type_select option:contains('+track_type+')').prop('selected', true);
            
            //console.log("name select "+ $("#type_select option:selected").text())
            for (let index in content_table[track_type]){
                //console.log("nsme select "+ content_table[$("#type_select option:selected").text()][index].name )
                $('#name_select').append(`<option value="">${content_table[track_type][index].name}</option>`)
            }
            $('#path_input').val(current_playlist.tracks[current_track_index].path)
            let indexOf = content_table[track_type].findIndex(s=>s.path==current_playlist.tracks[current_track_index].path)
            let FileName = content_table[track_type][indexOf].name
            $('#name_select option:contains('+FileName+')').prop('selected', true); 

            if(current_playlist.tracks[current_track_index]['repeat']==true){
                $("#bt_repeat").prop('checked', true);
            }else{
                $("#bt_repeat").prop('checked', false);
            }

            actions_topic_table.data_array = current_playlist.tracks[current_track_index].actions
            triggers_topic_table.data_array = current_playlist.tracks[current_track_index].triggers       
        }else{
            //------------------------NEW TRACK-------------------------
            console.log("add new track")
            $('#track_name_input').val('new_track')
            $('#order_input').val(current_playlist.tracks.length+1)
            
            //console.log($('#type_select'))

            content_table[$('#type_select').find(":selected").text()].forEach(item =>{
                $('#name_select').append(`<option value="">${item.name}</option>`)
            })
            $('#path_input').val(content_table[$("#type_select option:selected").text()][0].path)
            
        }

        topic_table_show(actions_topic_table, actionEventList, 'action_topics_list', 'A')
        topic_table_show(triggers_topic_table, triggerEventList, 'trigger_topics_list', 'T') 

    })

    $('#type_select').on("change", function(){
        //console.log("edit content type: " + $('#type_select').val())
        $('#name_select').empty()
        for (let index in content_table[$("#type_select option:selected").text()]){
            //console.log("nsme select "+ content_table[$("#type_select option:selected").text()][index].name )
            $('#name_select').append(`<option value="">${content_table[$("#type_select option:selected").text()][index].name}</option>`)
        }
        //let tmpIndex = content_table.findIndex(s=>s.type==$('#type_select').val())
        $('#path_input').val(content_table[$("#type_select option:selected").text()][0].path)
    })

    $('#name_select').on("change", function(){
        //console.log("name select changed: "+$("#name_select option:selected").text())
        let tmpIndex = content_table[$("#type_select option:selected").text()].findIndex(s=>s.name==$("#name_select option:selected").text())
        $('#path_input').val(content_table[$("#type_select option:selected").text()][tmpIndex].path) 
    })

    $('#loop_Enable').on("change",function() {
        // try {
        //     current_playlist.tracks[current_track_index].loop = $(this).prop('checked')
        // }catch{

        // }
    })

    function show_delete_track_modal(index){
        current_track_index = index
        $('#editPlaylistModal').modal('hide')
        $('#confirmDeleteTrackModal').modal('show')
        $('#deleteTrack_name_input').val(current_playlist.tracks[current_track_index].name)
    }
